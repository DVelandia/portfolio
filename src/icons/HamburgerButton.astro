---
const MOBILE_MENU_CONTENT_ID = "menuMobileContent"
const genericHamburgerLine =
	"h-[2px] w-6 bg-black dark:bg-white transition ease transform duration-300"
---

<div
	id="menu-toggle"
	class="z-50 inline-flex h-[40px] w-[40px] items-center justify-center rounded border-2 border-black/10 p-1 transition hover:scale-110 hover:border-black/20 hover:bg-black/5 dark:border-white/10 dark:hover:border-white/30 dark:hover:bg-white/5 md:hidden"
>
	<button
		aria-expanded="false"
		aria-controls={MOBILE_MENU_CONTENT_ID}
		class="hamburgerButton group relative flex h-[20px] w-6 flex-col items-center justify-between lg:hidden"
		aria-label="Abrir menú de navegación"
	>
		<span
			class:list={["group-[.open]:translate-y-2 group-[.open]:rotate-45", genericHamburgerLine]}
		>
		</span>
		<span class:list={["group-[.open]:opacity-0", genericHamburgerLine]}></span>
		<span class:list={["group-[.open]:opacity-0", genericHamburgerLine]}></span>
		<span
			class:list={[
				"group-[.open]:-translate-y-[0.6rem] group-[.open]:-rotate-45",
				genericHamburgerLine,
			]}
		>
		</span>
	</button>
</div>

<script>
	import { $, $$ } from "@/utils/dom-selector"

	const DISPLAY = {
		hamburgerMenuClass: ".hamburgerButton",
		open: "open",
		hamburgerButtonClicked: "hamburgerButtonClicked",
	} as const

	document.addEventListener("astro:page-load", () => {
		const hamburgerButton = $(DISPLAY.hamburgerMenuClass)

		$$(DISPLAY.hamburgerMenuClass).forEach((button) => {
			button.addEventListener("click", () => {
				const hamburgerButton = $(DISPLAY.hamburgerMenuClass)!
				hamburgerButton.classList.toggle(DISPLAY.open)
				const isMenuOpen = hamburgerButton.classList.contains(DISPLAY.open)
				hamburgerButton.setAttribute("aria-expanded", String(isMenuOpen))
				hamburgerButton.setAttribute(
					"aria-label",
					isMenuOpen ? "Cerrar menú de navegación" : "Abrir menú de navegación"
				)
				const hamburgerButtonClick = new CustomEvent(DISPLAY.hamburgerButtonClicked)
				hamburgerButton.dispatchEvent(hamburgerButtonClick)
			})
		})
		if (hamburgerButton?.classList?.contains(DISPLAY.open))
			hamburgerButton?.classList?.remove(DISPLAY.open)
	})
</script>
